// Styles für das Layouting von Formularen mit Hilfe von HTML-Tabellen
// - Hintergründe sind transparent
// - Alle Formularfelder füllen die Tabellenzellbreite vollständig aus
// - Ausnahme: Felder mit Klasse input-arvatoMini. Die bleiben klein
// - Label füllen die Tabellenzellbreite ebenfalls vollständig aus. Bündigkeit wird über Tabelle festgelegt
// - Für alle Formularfelder werden bei der Größenberechnung in gleicher Weise die Ränder
//     berücksichtigt. Defaultmäßig ist das nämlich eigenartiger Weise für Selects
//     anders als für Inputs.
// Die Bezüge auf .control-label und .form-horizontal überschreiben Eigenschaften, die man
//   evt. durch ein ursprünglich auf Bootstrap basierendes Layout geerbt hat oder durch die Darstellung
//   von Feldvalidierungsfehlern untergeschoben bekommt.
// Für Chrome gibt's noch einen Extratrick:
//   Damit Kalenderhelfer *auf* ihren zugehörigen Eingabefeldern verbleiben und nicht in einer neuen Zeile
//   rutschen, kriegen alle Felder in Tablegrids einen negativen rechten Margin. Und damit dadurch für Felder
//   *ohne* Kalenderhelfer die Fehler-Icons nicht zu weit links stehen, werden für diese durch äußerst
//   trickreiche Selektoren die Positionierung der Icons wieder korrigiert.
//
// Zuletzt explizit getestet mit Chrome 27, Firefox 20 und Internet Explorer 9
// mit den für Layout-Tests angelegten Klassen im Package forscher.nocket.page.gen.layout

.tablegrid {
	background-color: transparent;
}

.tablegrid td, .tablegrid tr {
	background-color: transparent;
	padding: 4px 4px;
}

.tablegrid .control-group.error {
	margin-bottom: 0px;
}

td input[type],
td .uneditable-input,
td select,
.form-horizontal td select,
td textarea {
	width: 100%;
	-webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
	-moz-box-sizing: border-box;    /* Firefox, other Gecko */
	box-sizing: border-box;         /* Opera/IE 8+ */
	margin-bottom: 0px;
}

td input[type],
td .uneditable-input,
td textarea {
	height: @inputHeight;
}

td select .validation-error-icon {
	padding-top: -10px;
}

// Die Schreibweise "td .input-arvatoMini" ist nicht selektiv genug. Da Einstellungen von oben haben dann Vorrang.
td input[class="input-arvatoMini"] {
	width: 73px; /* Müsste man eigentlich irgendwie berechnen, aber das ist mir jetzt langsam zu kompliziert */
}

// <div> für Fehler-Icon zunächst 4 Pixel weniger nach links verschieben als in arvatoStyle.less allgemein festgelegt
td .add-on {
	margin-left: -1px;
}

// Sorgt dafür, dass der Kalenderhelfer bei Tabellen-Layout im Chrome noch *in* das Feld passt und nicht in die nächste Zeile rutscht
// Dadurch rutscht das Error-Icon hinterher, kommt in Summe also auf die gleiche Position raus wie ursprünglich in arvatoStyle.less festgelegt
td input[type] {
	margin-right: -4px;
}

// Kalenderhelfer um 4 Pixel weniger nach links rücken wegen der -4px oben. Zusammen gibt es wieder -30px wie in arvatoStyle.less
td .yui-skin-sam {
	margin-left: -26px;
}

// Und nun doch noch das Error-Icon weiter nach links ziehen für alle Konstellationen, bei denen es durch obige Styles
// nicht schon richtig mitgerutscht ist. Das ist für folgende Fälle notwendig:
//   - Es steht ein Kalenderhelfer davor
//   - Es handelt sich um eine Selectbox
//   - Es handelt sich um eine Checkbox
td .yui-skin-sam+.add-on,
td select+.add-on,
td input[type="checkbox"]+.add-on
{
	margin-left: -5px;
}

td input[type="checkbox"], th input[type="checkbox"] {
  width: 20px;
  margin-bottom: 1px; /* Rückt die Checkbox etwas nach oben, weil sie sonst etwas unter der Baseline des Prompts steht */
  margin-top: -1px; /* Rückt das Error-Icon etwas näher ran */
  margin-right: 0px;
}

td label, td .control-label, .form-horizontal td .control-label {
  width: 100%;
  margin-bottom: 0px;
  margin-top: 2px;
}

